(function(u){typeof define=="function"&&define.amd?define(u):u()})(function(){"use strict";(function(){const u="https://www.shipwait.com";function b(e){const t=e.split("?")[1]||"";return Object.fromEntries(new URLSearchParams(t))}const p=document.currentScript,{id:n}=b((p==null?void 0:p.src)||"");if(!n){console.warn("[Shipwait] Missing projectId in script!");return}function o(e,t={}){window.dispatchEvent(new CustomEvent(e,{detail:t}))}async function v(){try{const e=await fetch(`${u}/api/submission-behaviors?projectId=${n}`);if(!e.ok)return null;const{data:t}=await e.json();return t}catch{return null}}function w(e){const t=e.closest("form");if(!t)return;const f=document.querySelector("[data-shipwait-message]"),r=t.querySelector("button[type='submit']"),d=(r==null?void 0:r.textContent)||"Submit";function l(s){f?f.textContent=s:alert(s),o("shipwait:message",{projectId:n,message:s})}function y(s){e.disabled=s,r&&(r.disabled=s,r.textContent=s?`${d}...`:d),o("shipwait:loading",{projectId:n,loading:s})}t.addEventListener("submit",async s=>{s.preventDefault();const h=e.value.trim();if(o("shipwait:submit",{projectId:n,email:h}),!h){l("Please enter your email."),o("shipwait:error",{projectId:n,error:"ValidationError",message:"Email required"});return}y(!0);try{const i=await v(),a=(i==null?void 0:i.behavior_type)||"do_nothing",c=a==="redirect"?i.redirect:i.message,m=await fetch(`${u}/api/leads`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:h,projectId:n})});if(!m.ok){const g=await m.json().catch(async E=>({message:await m.text()}));throw new Error(g.message||"Server error")}if(o("shipwait:success",{projectId:n,email:h,behaviorType:a,payload:c}),a==="redirect"&&c)return o("shipwait:redirect",{projectId:n,url:c}),void(window.location.href=c);a==="show_message"&&c&&l(c),e.value=""}catch(i){const a=i.message||"Server error";l(a),o("shipwait:error",{projectId:n,error:i.constructor.name,message:a})}finally{y(!1)}})}new MutationObserver((e,t)=>{for(const f of e)for(const r of f.addedNodes){if(!(r instanceof Element))continue;const d=r.matches("input[data-shipwait]")?r:r.querySelector("input[data-shipwait]");if(d){w(d),t.disconnect();return}}}).observe(document.body,{childList:!0,subtree:!0}),document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("input[data-shipwait]");e&&w(e)})})()});
